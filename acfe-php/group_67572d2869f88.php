<?php 

if( function_exists('acf_add_local_field_group') ):

acf_add_local_field_group(array(
	'key' => 'group_67572d2869f88',
	'title' => 'Elementor Options',
	'fields' => array(
		array(
			'key' => 'field_689276a103079',
			'label' => 'Enable Custom Elementor Options',
			'name' => 'enable_custom_elementor_options',
			'aria-label' => '',
			'type' => 'radio',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'disable' => 'disable',
				'enable' => 'enable',
			),
			'default_value' => 'disable',
			'return_format' => 'value',
			'allow_null' => 0,
			'other_choice' => 0,
			'allow_in_bindings' => 0,
			'layout' => 'horizontal',
			'save_other_choice' => 0,
		),
		array(
			'key' => 'field_68926e68ad07d',
			'label' => 'Default Container Padding',
			'name' => '',
			'aria-label' => '',
			'type' => 'tab',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'placement' => 'top',
			'endpoint' => 0,
			'selected' => 0,
		),
		array(
			'key' => 'field_6892607d866da',
			'label' => 'Container Padding',
			'name' => 'container_padding',
			'aria-label' => '',
			'type' => 'number',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '33.33',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'min' => '',
			'max' => '',
			'allow_in_bindings' => 0,
			'placeholder' => '',
			'step' => '',
			'prepend' => '',
			'append' => 'px',
		),
		array(
			'key' => 'field_6892609a866db',
			'label' => 'Container Padding Tablet',
			'name' => 'container_padding_tablet',
			'aria-label' => '',
			'type' => 'number',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '33.33',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'min' => '',
			'max' => '',
			'allow_in_bindings' => 0,
			'placeholder' => '',
			'step' => '',
			'prepend' => '',
			'append' => 'px',
		),
		array(
			'key' => 'field_689260a6866dc',
			'label' => 'Container Padding Mobile',
			'name' => 'container_padding_mobile',
			'aria-label' => '',
			'type' => 'number',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '33.33',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'min' => '',
			'max' => '',
			'allow_in_bindings' => 0,
			'placeholder' => '',
			'step' => '',
			'prepend' => '',
			'append' => 'px',
		),
		array(
			'key' => 'field_68926e7dad07e',
			'label' => 'Hero Min Height',
			'name' => '',
			'aria-label' => '',
			'type' => 'tab',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'placement' => 'top',
			'endpoint' => 0,
			'selected' => 0,
		),
		array(
			'key' => 'field_675746a063b51',
			'label' => 'Header Height',
			'name' => 'header_height',
			'aria-label' => '',
			'type' => 'number',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '33.33',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'min' => '',
			'max' => '',
			'allow_in_bindings' => 0,
			'placeholder' => '',
			'step' => '',
			'prepend' => '',
			'append' => 'px',
		),
		array(
			'key' => 'field_6892603334c88',
			'label' => 'Header Height Tablet',
			'name' => 'header_height_tablet',
			'aria-label' => '',
			'type' => 'number',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '33.33',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'min' => '',
			'max' => '',
			'allow_in_bindings' => 0,
			'placeholder' => '',
			'step' => '',
			'prepend' => '',
			'append' => 'px',
		),
		array(
			'key' => 'field_6892603c34c89',
			'label' => 'Header Height Mobile',
			'name' => 'header_height_mobile',
			'aria-label' => '',
			'type' => 'number',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '33.33',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'min' => '',
			'max' => '',
			'allow_in_bindings' => 0,
			'placeholder' => '',
			'step' => '',
			'prepend' => '',
			'append' => 'px',
		),
		array(
			'key' => 'field_68926f181ebec',
			'label' => 'Bottom Mobile Menu Height',
			'name' => 'bottom_mobile_menu_height',
			'aria-label' => '',
			'type' => 'number',
			'instructions' => 'If using the bottom mobile menu, add the height of the module to account for the new bottom position of the hero section. The new min-height will be calculated automatically if a value is added here.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'min' => '',
			'max' => '',
			'allow_in_bindings' => 0,
			'placeholder' => '',
			'step' => '',
			'prepend' => '',
			'append' => 'px',
		),
		array(
			'key' => 'field_689376222ca44',
			'label' => 'Notes',
			'name' => '',
			'aria-label' => '',
			'type' => 'tab',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'placement' => 'top',
			'endpoint' => 0,
			'selected' => 0,
		),
		array(
			'key' => 'field_689275f403078',
			'label' => 'Elementor Options Notes',
			'name' => '',
			'aria-label' => '',
			'type' => 'message',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'message' => 'Please note that the following responsive breakpoints are hard-coded into the embedded stylesheets that are included in this plugin. If the breakpoints are adjusted in Elementor settings, you may need to include some custom CSS to compensate.

Desktop: 1024px and above | Tablet: 768px to 1024px | Mobile: 768px and below',
			'new_lines' => 'br',
			'esc_html' => 0,
		),
		array(
			'key' => 'field_68926292ea1e2',
			'label' => 'Add Default Container Padding',
			'name' => '',
			'aria-label' => '',
			'type' => 'message',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'message' => 'These values are used to calculate the default top and bottom padding of Elementor containers while maintaining the default left and right padding set in Elementor. This will not apply to any nested containers, so only the main parent container will be affected. You can customize each container\'s padding directly in Elementor if custom values are required, or add one of these classes to override the default padding in certain scenarios.

Note that half-padding only applies to Tablet and Desktop sizes. Mobile padding defaults to the value of <strong>Container Padding Mobile</strong>.

<code>container-padding-half</code>

Removes the top or bottom padding from a container at all screen widths.

<code>container-padding-top-none</code>
<code>container-padding-bottom-none</code>',
			'new_lines' => 'br',
			'esc_html' => 0,
		),
		array(
			'key' => 'field_68926143ffda4',
			'label' => 'Add Header Heights',
			'name' => '',
			'aria-label' => '',
			'type' => 'message',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'message' => 'These values are used to calculate a min-height of 100vh in hero sections to account for the height of the navigation header. Add the following class to any Elementor section where you want to enable the min-height.

<code>hero-min-height</code>

Add the following class instead if the hero should revert to its normal height on mobile.

<code>hero-min-height-disable-mobile</code>',
			'new_lines' => 'br',
			'esc_html' => 0,
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'options_page',
				'operator' => '==',
				'value' => 'elementor_options',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'tooltip',
	'hide_on_screen' => '',
	'active' => true,
	'description' => '',
	'show_in_rest' => 0,
	'acfe_display_title' => '',
	'acfe_autosync' => array(
		0 => 'php',
	),
	'acfe_form' => 0,
	'acfe_meta' => '',
	'acfe_note' => '',
	'modified' => 1754494919,
));

endif;